require('console-stamp')(console, 'yyyy/mm/dd HH:MM:ss.l');

const express = require('express');
const pg = require('pg');
const types = pg.types;
const path = require('path');

const requestIP = require('request-ip');

const schedule = require('node-schedule');

const app = express();

if(process.env.NODE_ENV === "production") { //배포모드
    app.use(express.static(path.join(__dirname, "client/build")));
}

types.setTypeParser(1114, function(stringValue) {
    return stringValue;
});

app.get("/", (req, res) => {
    res.sendFile(path.join(__dirname, "client/build", "index.html"));
  });
  
//매일 24시마다 EPL 최신화
var scheduler = schedule.scheduleJob('* * 24 * * *', function(){ 
    const crawl = require('./crawl/crawlE');
});

//매일 12시마다 K리그 최신화
var schedulerK = schedule.scheduleJob('* * 12 * * *', function(){ 
    const crawl = require('./crawl/crawlK');
});

const config = {
    host: 'ec2-75-101-128-10.compute-1.amazonaws.com',
    user: 'uncchwbvxutngo',
    password: 'd4588296df74581072054ebaecdb44fd14ccc49c14a1d86e285ff27a964de9d3',
    database: 'd9qnqnh0i4mcv7',
    port: 5432,
    ssl: true
};

app.get("/api/teams",(req, res) => {
    var pool = new pg.Pool(config);
    pool.connect(function(err, client) { 
        if(err) {
            console.log("Can not connect to DB " + err)
        }
        console.log('select aa.*, cc.poster_path from teams aa left join teamranks bb on aa.team_ID = bb.rank_team left join badge cc on aa.team_ID = cc.poster_id order by (bb.rank_win * 3)+(bb.rank_draw*1) desc');
        client.query('select aa.*, cc.poster_path from teams aa left join teamranks bb on aa.team_ID = bb.rank_team left join badge cc on aa.team_ID = cc.poster_id order by (bb.rank_win * 3)+(bb.rank_draw*1) desc',function(err, result){
            if(err) {
                console.log(err);
                res.status(400).send(err);
            }
            res.status(200).send(result.rows);
        }); 
    });
    pool.end();
});

app.get("/api/teamsK",(req, res) => {
    console.log(requestIP.getClientIp(req));
    var pool = new pg.Pool(config);
    pool.connect(function(err, client) { 
        if(err) {
            console.log("Can not connect to DB " + err)
        }
        console.log('select aa.*,bb.* ,cc.poster_path from teams_klc aa left join teamranks_klc bb on aa.team_ID = bb.rank_team left join badge_klc cc on aa.team_ID = cc.poster_id order by (bb.rank_win * 3)+(bb.rank_draw*1) desc');
        client.query('select aa.*,bb.* ,cc.poster_path from teams_klc aa left join teamranks_klc bb on aa.team_ID = bb.rank_team left join badge_klc cc on aa.team_ID = cc.poster_id order by (bb.rank_win * 3)+(bb.rank_draw*1) desc',function(err, result){
            if(err) {
                console.log(err);
                res.status(400).send(err);
            }
			for(var i = 0; i < result.rows.length; i++){
				if(result.rows[i].rank_update){
				result.rows[i].rank_update = result.rows[i].rank_update.substr(19, 5);
				}
			}
            res.status(200).send(result.rows);
        }); 
    });
    pool.end();
});


const PORT = process.env.PORT || 5000;

app.listen(PORT,()=>{
    console.log(`Check out the app at http://localhost:${PORT}`);
});